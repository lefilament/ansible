version: '3.7'
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
    labels:
      co.elastic.logs/enabled: "false"
    ports:
      - "127.0.0.1:9200:9200"
    volumes:
      - data:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1

  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.1
    container_name: kibana
    environment:
      ELASTICSEARCH_HOSTS: "http://elasticsearch:9200"
      MONITORING_ENABLED: "false"
    labels:
      co.elastic.logs/enabled: "false"
      traefik.enable: "true"
      traefik.http.routers.kibana.middlewares: "auth@file"
      traefik.http.routers.kibana.rule: "Host(`{{ kibana_url }}`)"
      traefik.http.routers.kibana.service: "kibana"
      traefik.http.services.kibana.loadbalancer.server.port: "5601"
    networks:
      - default
      - inverseproxy_shared
    ports:
      - "127.0.0.1:5601:5601"

  logstash:
    image: docker.elastic.co/logstash/logstash:7.10.1
    container_name: logstash
    environment:
      MONITORING_ENABLED: "false"
    labels:
      co.elastic.logs/enabled: "false"
    ports:
      - "{{ logstash_port }}:5044"
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
      - ./patterns:/usr/share/logstash/patterns:ro
      - ./logstash.crt:/usr/share/logstash/logstash.crt:ro
      - ./logstash.key:/usr/share/logstash/logstash.key:ro

networks:
  default:
        driver_opts:
            encrypted: 1
  inverseproxy_shared:
        external: true

volumes:
  data:

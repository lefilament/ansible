###############################################################################
###############################################################################
#
# HOST DEFINITION
#
###############################################################################
###############################################################################

# Define a host for the local machine
{% for host in groups['all']|difference(inventory_hostname)  %}
define host{
        use                     linux-server            
        host_name               {{ host }} 
        alias                   {{ host }}
        address                 {{ hostvars[host].ansible_host }}
        }

{% endfor %}

###############################################################################
###############################################################################
#
# HOST GROUP DEFINITION
#
###############################################################################
###############################################################################

# Define an optional hostgroup for Linux machines

define hostgroup{
        hostgroup_name  serveurs      
        alias           Serveurs Odoo 
        members         {{ groups['odoo_server'] | map('extract', hostvars, ['inventory_hostname']) | join(',') }}
        }



###############################################################################
###############################################################################
#
# SERVICE DEFINITIONS
#
###############################################################################
###############################################################################


# Define a service to "ping" the local machine

define service{
        use                             generic-service    
        host_name                       {{ groups['all'] | difference(inventory_hostname) | map('extract', hostvars, ['inventory_hostname']) | join(',') }}
        service_description             PING
        check_command                   check_ping!100.0,20%!500.0,60%
        }


# Define a service to check the disk space of the root partition
# on the local machine.  Warning if < 20% free, critical if
# < 10% free space on partition.

define service{
        use                             generic-service 
        host_name                       {{ groups['all'] | difference(inventory_hostname) | map('extract', hostvars, ['inventory_hostname']) | join(',') }}
        service_description             Espace Disque
        check_command                   check_nrpe!check_hda1
        }

define service{
        use                             generic-service
        host_name                       {{ groups['extradisk_vps'] | difference(inventory_hostname) | map('extract', hostvars, ['inventory_hostname']) | join(',') }}
        service_description             Disque Additionnel
        check_command                   check_nrpe!check_vdb
        }

# Define a service to check the number of currently logged in
# users on the local machine.  Warning if > 20 users, critical
# if > 50 users.

define service{
        use                             generic-service
        host_name                       {{ groups['all'] | difference(inventory_hostname) | map('extract', hostvars, ['inventory_hostname']) | join(',') }}
        service_description             Utilisateurs Connectes
        check_command                   check_nrpe!check_users
        }


# Define a service to check the number of currently running procs
# on the local machine.  Warning if > 250 processes, critical if
# > 400 processes.

define service{
        use                             generic-service
        host_name                       {{ groups['all'] | difference(inventory_hostname) | map('extract', hostvars, ['inventory_hostname']) | join(',') }}
        service_description             Services en cours
        check_command                   check_nrpe!check_total_procs
        }

# Define services to check for running processes
define service{
        use                             generic-service
        host_name                       {{ groups['all'] | difference(inventory_hostname) | difference(groups['backup_server'])  | difference(groups['docker']) | map('extract', hostvars, ['inventory_hostname']) | join(',') }}
        service_description             Nginx Service
        check_command                   check_nrpe!check_procs_nginx
        }

define service{
        use                             generic-service
        host_name                       {{ groups['all'] | difference(inventory_hostname) | map('extract', hostvars, ['inventory_hostname']) | join(',') }}
        service_description             SSHD Service
        check_command                   check_nrpe!check_procs_sshd
        }


# Define a service to check the load on the local machine. 

define service{
        use                             generic-service
        host_name                       {{ groups['all'] | difference(inventory_hostname) | map('extract', hostvars, ['inventory_hostname']) | join(',') }}
        service_description             Charge CPU
        check_command                   check_nrpe!check_load
        }

# Define a service to check the RAM on the local machine. 

define service{
        use                             generic-service
        host_name                       {{ groups['all'] | difference(inventory_hostname) | map('extract', hostvars, ['inventory_hostname']) | join(',') }}
        service_description             Charge RAM
        check_command                   check_nrpe!check_mem
        }

# SSH
define service{
        use                             generic-service
        host_name                       {{ groups['all'] | difference(inventory_hostname) | map('extract', hostvars, ['inventory_hostname']) | join(',') }}
        service_description             SSH
        check_command                   check_ssh_port!{{ default_sshd_port }}
        }

# FAIL2BAN
define service{
        use                             generic-service
        host_name                       {{ groups['all'] | difference(inventory_hostname) | map('extract', hostvars, ['inventory_hostname']) |  join(',') }}
        service_description             Fail2ban
        check_command                   check_nrpe!check_fail2ban
        }

# Docker Odoo 
define service{
        use                             generic-service
        host_name                       {{ groups['docker_odoo'] | map('extract', hostvars, ['inventory_hostname']) | join(',') }}
        service_description             Docker Odoo
        check_command                   check_nrpe!check_docker_odoo
        }

# Docker Proxy
define service{
        use                             generic-service
        host_name                       {{ groups['docker'] | map('extract', hostvars, ['inventory_hostname']) | join(',') }}
        service_description             Docker Proxy
        check_command                   check_nrpe!check_docker_proxy
        }

# Definition des services HTTP

{% for host in groups['odoo_server'] | difference(inventory_hostname) %}
# {{ host }} Odoo
define service{
        use                             generic-service            
        host_name                       {{ host }} 
        service_description             Odoo {{ host }}
        check_command                   check_https!'{{ hostvars[host].odoo_url }}'
        }

define service{
        use                             daily-service            
        host_name                       {{ host }} 
        service_description             Certificate Odoo {{ host }}
        check_command                   check_certif!'{{ hostvars[host].odoo_url }}'!443
        }

define service{
        use                             generic-service
        host_name                       {{ host }} 
        service_description             Odoo Service
        check_command                   check_nrpe!check_procs_odoo
        }
{% endfor %}

{% for host in groups['owncloud_server'] | difference(inventory_hostname) %}
# {{ host }} Owncloud 
define service{
        use                             generic-service            
        host_name                       {{ host }} 
        service_description             OwnCloud {{ host }}
        check_command                   check_https!'{{ hostvars[host].cloud_url }}'
        }

define service{
        use                             daily-service            
        host_name                       {{ host }} 
        service_description             Certificate OwnCloud {{ host }}
        check_command                   check_certif!'{{ hostvars[host].cloud_url }}'!443
        }

define service{
        use                             generic-service
        host_name                       {{ host }}
        service_description             Owncloud Service
        check_command                   check_nrpe!check_procs_owncloud
        }

{% endfor %}

